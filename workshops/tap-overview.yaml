#@ load("@ytt:data", "data")
---
apiVersion: learningcenter.tanzu.vmware.com/v1beta1
kind: Workshop
metadata:
  name: tap-overview
spec:
  content:
    files: github.com/tanzu-end-to-end/tap-workshop?ref=development
    image: harbor.tap.amer.end2end.link/tanzu-e2e/eduk8s-tap-workshop:latest
  description: An introduction to the Tanzu Application Platform
  difficulty: beginner
  duration: 30m
  session:
    applications:
      console:
        enabled: true
        vendor: octant
      editor:
        enabled: true
      terminal:
        enabled: true
        layout: split
    env:
    - name: GITEA_PASSWORD
      value: #@ data.values.gitea.adminPassword
    - name: HARBOR_USER
      value: #@ data.values.harbor.user
    - name: HARBOR_PASSWORD
      value: #@ data.values.harbor.adminPassword
    namespaces:
      budget: custom
    objects:
    - apiVersion: v1
      kind: LimitRange
      metadata:
        name: resource-limits
      spec:
        limits:
        - max:
            storage: 10Gi
          type: PersistentVolumeClaim
    - apiVersion: v1
      imagePullSecrets:
      - name: registry-credentials
      kind: ServiceAccount
      metadata:
        name: tap-sa
      secrets:
      - name: registry-credentials
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        annotations:
          kapp.k14s.io/change-group: role
        name: $(session_namespace)-kapp-permissions
      rules:
      - apiGroups:
        - servicebinding.io
        resources:
        - servicebindings
        verbs:
        - '*'
      - apiGroups:
        - services.tanzu.vmware.com
        resources:
        - resourceclaims
        verbs:
        - '*'
      - apiGroups:
        - serving.knative.dev
        resources:
        - services
        verbs:
        - '*'
      - apiGroups:
        - ""
        resources:
        - configmaps
        verbs:
        - get
        - watch
        - list
        - create
        - update
        - patch
        - delete
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        annotations:
          kapp.k14s.io/change-rule: upsert after upserting role
        name: $(session_namespace)-kapp-permissions
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: $(session_namespace)-kapp-permissions
      subjects:
      - kind: ServiceAccount
        name: tap-sa
        namespace: $(session_namespace)
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: $(session_namespace)-session-crb
        namespace: $(session_namespace)
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: $(service_account)
        namespace: $(workshop_namespace)
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: $(session_namespace)-default-crb
        namespace: $(session_namespace)
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: default
        namespace: $(session_namespace)
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: service-account-role
        namespace: $(session_namespace)
      rules:
      - apiGroups:
        - '*'
        resources:
        - '*'
        verbs:
        - '*'
    - apiVersion: rabbitmq.com/v1beta1
      kind: RabbitmqCluster
      metadata:
        name: rmq-1
        namespace: $(session_namespace)
      spec:
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 500Mi
    - apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app: sensors-publisher
        name: sensors-publisher
        namespace: $(session_namespace)
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: sensors-publisher
        template:
          metadata:
            labels:
              app: sensors-publisher
            name: sensors-publisher
          spec:
            containers:
            - env:
              - name: SERVICE_BINDING_ROOT
                value: /bindings
              image: harbor.workshop.amer.end2end.link/tap/spring-sensors-sensor
              imagePullPolicy: IfNotPresent
              name: sensors-publisher
              volumeMounts:
              - mountPath: /bindings/rmq
                name: service-binding
            restartPolicy: Always
            volumes:
            - name: service-binding
              projected:
                sources:
                - secret:
                    name: rmq-1-default-user
  title: TAP Overview
  url: https://github.com/tanzu-end-to-end/tap-workshop
  vendor: eduk8s.io
